name: Watchman Tests
# This workflow will run tests with an up-to-date production environment instead
# of the locked one.
# It will warn developers if any update of a dependency broke something.

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ 'master', 'master-v*' ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ['master', 'master-v*' ]
  schedule:
    - cron: '12 4 * * *'


jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ "3.13" ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        # Development version of OpenMDAO is installed to ensure preview of any problem.
        # Installing pytest-cov is needed because of pytest.ini
        run: |
          pip install git+https://github.com/OpenMDAO/OpenMDAO.git
          pip install .
          pip install pytest pytest-cov nbval
        shell: bash

      - name: List installed packages
        # List packages and versions for postmortem analysis.
        run: pip list --format=freeze | tee requirements.txt
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: pip package list for ${{ matrix.os }}
          path: requirements.txt

      - name: Unit tests
        run: |
          pytest --no-cov src | tee pytest.log
          awk 'BEGIN{pr=0};/warnings summary/{pr=1};pr==1' pytest.log > warnings.log  # The warning summary is put in a dedicated file.
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: Warnings summary from unit test for ${{ matrix.os }}
          path: warnings.log

      - name: Notebook tests
        run: pytest --no-cov --nbval-lax -p no:python src/fastoad/notebooks
        shell: bash
